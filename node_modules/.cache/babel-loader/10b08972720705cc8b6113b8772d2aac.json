{"ast":null,"code":"var _jsxFileName = \"/home/savinnsk/Savinnsk/Study/Ignite_ReactJs/reactjs/dt_money/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { GlobalStyle } from './styles/globals';\nimport { Dashbord } from './components/Dashbord';\nimport { Header } from './components/Header';\nimport { NewTransactionModal } from './components/NewTransactionModal';\nimport { TransactionsProvider } from './hooks/useTransactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); //put modal in tag root\n\nexport function App() {\n  _s();\n\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function handleOpenNewTransactionModal() {\n    // handle = click\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function handleCloseNewTransactionModal() {\n    // handle = click\n    setIsNewTransactionModalOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onOpenNewTransactionNewModal: handleOpenNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Dashbord, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(NewTransactionModal, {\n      isOpen: isNewTransactionModalOpen,\n      onRequestClose: handleCloseNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n} // export default App;\n\n_s(App, \"yRXCey3RZs7pG1xmg23iv43FmMY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/savinnsk/Savinnsk/Study/Ignite_ReactJs/reactjs/dt_money/src/App.tsx"],"names":["useState","Modal","GlobalStyle","Dashbord","Header","NewTransactionModal","TransactionsProvider","setAppElement","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","handleOpenNewTransactionModal","handleCloseNewTransactionModal"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;AAGAL,KAAK,CAACM,aAAN,CAAoB,OAApB,E,CAA8B;;AAE9B,OAAO,SAASC,GAAT,GAAe;AAAA;;AAEpB,QAAM,CAACC,yBAAD,EAA6BC,4BAA7B,IAA8DV,QAAQ,CAAC,KAAD,CAA5E;;AAEA,WAASW,6BAAT,GAAwC;AAAE;AACtCD,IAAAA,4BAA4B,CAAC,IAAD,CAA5B;AACH;;AACD,WAASE,8BAAT,GAAyC;AAAE;AACvCF,IAAAA,4BAA4B,CAAC,KAAD,CAA5B;AACH;;AAID,sBACE,QAAC,oBAAD;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,4BAA4B,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,mBAAD;AACE,MAAA,MAAM,EAAEF,yBADV;AAEE,MAAA,cAAc,EAAEG;AAFlB;AAAA;AAAA;AAAA;AAAA,YAHD,eAOC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,C,CAED;;GA1BgBJ,G;;KAAAA,G","sourcesContent":["import { useState } from 'react';\nimport Modal from 'react-modal';\nimport {GlobalStyle} from './styles/globals';\n\nimport { Dashbord } from './components/Dashbord';\nimport { Header } from './components/Header';\nimport { NewTransactionModal } from './components/NewTransactionModal';\nimport { TransactionsProvider } from './hooks/useTransactions';\n\n\nModal.setAppElement('#root'); //put modal in tag root\n\nexport function App() {\n\n  const [isNewTransactionModalOpen , setIsNewTransactionModalOpen ] = useState(false);\n    \n  function handleOpenNewTransactionModal(){ // handle = click\n      setIsNewTransactionModalOpen(true)\n  }\n  function handleCloseNewTransactionModal(){ // handle = click\n      setIsNewTransactionModalOpen(false)\n  }\n  \n\n\n  return (\n    <TransactionsProvider>\n     <Header onOpenNewTransactionNewModal={handleOpenNewTransactionModal} />\n     <Dashbord/>\n     <NewTransactionModal\n       isOpen={isNewTransactionModalOpen}\n       onRequestClose={handleCloseNewTransactionModal}\n     />\n     <GlobalStyle/>\n    </TransactionsProvider>\n  );\n}\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}