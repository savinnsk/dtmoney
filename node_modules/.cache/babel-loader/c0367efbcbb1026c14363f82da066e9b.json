{"ast":null,"code":"var _jsxFileName = \"/home/savinnsk/Savinnsk/Study/Ignite_ReactJs/reactjs/dt_money/src/components/NewTransactionModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { useTransaction } from '../../hooks/useTransactions';\nimport closeImg from \"../../assets/vector.svg\";\nimport incomeImg from \"../../assets/entradas.svg\";\nimport outcomeImg from \"../../assets/saidas.svg\";\nimport { Container, TransactionTypeContainer, RadioBox } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewTransactionModal({\n  isOpen,\n  onRequestClose\n}) {\n  _s();\n\n  const {\n    createTransaction\n  } = useTransaction();\n  const [title, setTitle] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [category, setCategory] = useState('');\n  const [type, setType] = useState('deposit');\n\n  async function handleCreateNewTransaction(event) {\n    event.preventDefault();\n    await createTransaction({\n      title,\n      amount,\n      type,\n      category\n    });\n    setTitle('');\n    setAmount(0); //cleaning modal\n\n    setCategory('');\n    setType('deposit');\n    onRequestClose();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    overlayClassName: \"react-modal-overlay\",\n    className: \"react-modal-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onRequestClose,\n      className: \"react-modal-close\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: closeImg,\n        alt: \"close modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      onSubmit: handleCreateNewTransaction,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastrar transa\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo\",\n        value: title // event.target gets the value typed \n        ,\n        onChange: event => setTitle(event.target.value) //onChange runs a action when value changes \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Valor\",\n        value: amount,\n        onChange: event => setAmount(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TransactionTypeContainer, {\n        children: [/*#__PURE__*/_jsxDEV(RadioBox, {\n          type: \"button\",\n          onClick: () => {\n            setType('deposit');\n          },\n          isActive: type === 'deposit',\n          activeColor: \"green\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: incomeImg,\n            alt: \"income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Entrada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RadioBox, {\n          type: \"button\",\n          onClick: () => {\n            setType('withdraw');\n          },\n          isActive: type === 'withdraw',\n          activeColor: \"red\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: outcomeImg,\n            alt: \"outcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Saida\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Categotia\",\n        value: category,\n        onChange: event => setCategory(event.target.value) // we get the value typed here\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewTransactionModal, \"+wlJk0dZyYdscMWwJO0/bHqLOgo=\", false, function () {\n  return [useTransaction];\n});\n\n_c = NewTransactionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTransactionModal\");","map":{"version":3,"sources":["/home/savinnsk/Savinnsk/Study/Ignite_ReactJs/reactjs/dt_money/src/components/NewTransactionModal/index.tsx"],"names":["Modal","useState","useTransaction","Container","TransactionTypeContainer","RadioBox","NewTransactionModal","isOpen","onRequestClose","createTransaction","title","setTitle","amount","setAmount","category","setCategory","type","setType","handleCreateNewTransaction","event","preventDefault","closeImg","target","value","Number","incomeImg","outcomeImg"],"mappings":"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","sourcesContent":["import Modal from 'react-modal';\nimport { useState  , FormEvent } from 'react';\nimport { useTransaction } from '../../hooks/useTransactions';\n\nimport closeImg from '../../assets/vector.svg'\nimport incomeImg from '../../assets/entradas.svg';\nimport outcomeImg from '../../assets/saidas.svg';\n\nimport { Container , TransactionTypeContainer , RadioBox} from './styles';\n\ninterface NewTransactionProps  {\n  isOpen : boolean ;\n  onRequestClose: () => void;\n}\n\nexport function NewTransactionModal({ isOpen , onRequestClose } : NewTransactionProps ){\n  \n  const { createTransaction } = useTransaction()\n\n  const [title , setTitle] = useState('');\n  const [ amount, setAmount] = useState(0);\n  const [category , setCategory] = useState('');\n  const [type,setType] = useState('deposit');\n  \n async function handleCreateNewTransaction (event : FormEvent){\n    event.preventDefault();\n\n\n     await createTransaction({\n      title ,\n      amount ,\n      type , \n      category ,\n    })\n\n    setTitle('');\n    setAmount(0);  //cleaning modal\n    setCategory('');\n    setType('deposit');\n    onRequestClose();\n  }\n    return (\n     \n        <Modal isOpen={isOpen}\n               onRequestClose={onRequestClose}\n               overlayClassName=\"react-modal-overlay\"\n               className=\"react-modal-content\"\n               >  \n\n         <button type=\"button\" \n         onClick={onRequestClose}\n         className=\"react-modal-close\">\n           <img src={closeImg} alt=\"close modal\" />\n        </button> \n\n        <Container onSubmit={handleCreateNewTransaction}>    \n              <h2>Cadastrar transação</h2>\n\n              <input type=\"text\"\n               placeholder=\"Título\" \n               value={title}                                        // event.target gets the value typed \n               onChange = { event =>setTitle(event.target.value)}  //onChange runs a action when value changes \n               />                                                  \n\n              <input \n              type=\"number\"\n               placeholder=\"Valor\" \n               value ={amount}\n               onChange = { event =>setAmount(Number(event.target.value))}\n               />\n\n              <TransactionTypeContainer>\n                <RadioBox\n                type='button'\n                onClick={()=> {setType('deposit')}}\n                isActive={type === 'deposit'}\n                activeColor='green'\n                >\n                  <img src={incomeImg} alt=\"income\" />\n                  <span>Entrada</span>\n                </RadioBox>\n\n\n                <RadioBox\n                type='button'\n                onClick={()=>{setType('withdraw')}}\n                isActive={type === 'withdraw'}\n                activeColor='red'\n                >\n                  <img src={outcomeImg} alt=\"outcome\" />\n                  <span>Saida</span>\n                  \n                </RadioBox>\n              </TransactionTypeContainer>\n             \n\n              <input type=\"text\"\n               placeholder=\"Categotia\" \n               value={category}\n               onChange = { event =>setCategory(event.target.value)} // we get the value typed here\n               />\n\n              <button \n              type=\"submit\"\n              >Cadastrar</button>\n\n        </Container>\n        </Modal>\n    \n    )\n}"]},"metadata":{},"sourceType":"module"}